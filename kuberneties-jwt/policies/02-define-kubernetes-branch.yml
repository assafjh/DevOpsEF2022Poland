---
# Load policy into kubernetes branch
# This policy defines the demo branch kubernetes

- !policy
  id: applications
  owner: !group managers

# applications/jwt is a layer that will aggregate permissions for all kubernetes applications that want to use JWT to consume Conjur secrets
- !layer
  id: applications/jwt
  owner: !group managers

# create secrets
- !policy
  id: applications/safe
  owner: !group managers
  body:
  - &safe1-secrets
    - !variable
      id: secret1
      owner: !group ../../managers
    - !variable
      id: secret2
      owner: !group ../../managers
    - !variable
      id: secret3
      owner: !group ../../managers
    - !variable
      id: secret4
      owner: !group ../../managers
    - !variable
      id: secret5
      owner: !group ../../managers
    - !variable
      id: secret6
      owner: !group ../../managers
    - !variable
      id: secret7
      owner: !group ../../managers
    - !variable
      id: secret8
      owner: !group ../../managers

 # Allow applications/jwt layer to consume the secrets we have created
  - !permit
    role: !layer ../jwt
    privileges: [ read, execute ]
    resource: *safe1-secrets

# Create the JWT identity that we will use to authenticate to Conjur 
- !host
  id: applications/system:serviceaccount:conjur:conjur-demo-acct
  owner: !group managers
  annotations:
    authn-jwt/k8s-cluster1/kubernetes.io/namespace: conjur
    authn-jwt/k8s-cluster1/kubernetes.io/serviceaccount/name: conjur-demo-acct

# Add the host we have created to the layer 
- !grant
  roles:
    - !layer applications/jwt
  members:
    - !host applications/system:serviceaccount:conjur:conjur-demo-acct

# This policy defines a JWT authenticator to be used with Kubernetis cluster
- !policy
  id: conjur/authn-jwt/k8s-cluster1
  owner: !group managers
  body:
  - !webservice

  # Uncomment one of following variables depending on the public availability
  # of the Service Account Issuer Discovery service in Kubernetes 
  # If the service is publicly available, uncomment 'jwks-uri'.
  # If the service is not available, uncomment 'public-keys'

  # - !variable
  #   id: jwks-uri

  - !variable
    id: public-keys

  # This variable tells Conjur which claim in the JWT to use to determine the conjur host identity.
  - !variable
    id: token-app-property

  # This variable is used with token-app-property. This variable will hold the conjur policy path that contains the conjur host identity found by looking at the claim entered in token-app-property.
  - !variable
    id: identity-path

  # Uncomment ca-cert if the JWKS website cert isn't trusted by conjur

  # - !variable
  #   id: ca-cert

  # This variable contains what "iss" in the JWT.
  - !variable
    id: issuer
  
  # This variable contains what "aud" is the JWT.
  # - !variable
  #   id: audience
  
  - !permit
    role: !layer ../../../applications/jwt
    privilege: [ read, authenticate ]
    resource: !webservice